-# we need to break from the .container and
-# also surround everything in a form

- content_for(:header) do
  / header overridden
- content_for(:main_container_class) {'non-container'}
- content_for(:body_class) { 'questionnaire' }

/ has it's own form, so need it up here
=render :partial => 'shared/switch_jurisdiction', locals: {response_set: @response_set}
=render :partial => 'shared/switch_language', locals: {response_set: @response_set}

= semantic_form_for(@response_set, :as => :r, :url => update_my_survey_path, :html => {:method => :put, :id => "survey_form"}) do |f|

  .affixed
    %header
      .container
        .row
          .span9
            .jurisdiction
              = t('surveys.jurisdiction')
              .badge.badge-inverse=  @response_set.survey.complete_title
              %span.status= @survey.try(:status)
              = link_to "#switch-#{@response_set.id}", data: {toggle: :modal, content: t('dashboard.popover.change_jurisdiction') }, class: 'popdown changer' do
                %i.icon.icon-pencil
              = t('surveys.language')
              = certificate_locale_links(@response_set.jurisdiction)
              = link_to "#switch-language-#{@response_set.id}", data:{toggle: :modal}, class: 'changer' do
                %i.icon.icon-pencil
                = t('surveys.other_languages')

            %h1{'data-bind-to-input' => @survey.meta_map[:dataset_title]}= @response_set.title
          = render partial: 'surveyor/save_button'

  = render :partial => 'status_panel'
  = render :partial => 'shared/flashes'

  - data = {'response-id' => @response_set.id}
  - data['url-verified']              = t('surveyor.url_verified')
  - data['autocompleted']             = t('surveyor.autocompleted')
  - data['autocompleted-changed']     = t('surveyor.autocompleted_changed')
  - data['autocompleted-explained']   = t('surveyor.autocompleted_explained')
  - data['url-warning']               = t('surveyor.url_warning')
  - data['autocompleted-url-warning'] = t('surveyor.autocompleted_url_warning')
  - data['url-explained']             = t('surveyor.url_explained')
  - data['metadata-missing']          = t('surveyor.metadata_missing')

  - data['url-explanation']           = t('surveyor.url_explanation')
  - data['autocomplete-explanation']  = t('surveyor.autocomplete_explanation')

  #surveyor{class: params[:highlight_mandatory] ? 'highlight_mandatory' : '', data: data}
    = hidden_field_tag :surveyor_javascript_enabled, false
    - if @update
      = hidden_field_tag :update, true

    .container.survey-intro
      .well
        .row-fluid
          .span8.lead
            != @survey.intro
            %p
              %a{href: about_page_url}
                = t('surveys.read_more')

        .documentation-url
          - question = @survey.documentation_url
          %label
            = question.heading
          .row-fluid
            .span8
              - if @response_set.documentation_url.blank?
                %p.url.placeholder= question.placeholder
                .alert.alert-error
                  = t('surveyor.documentation_url.missing')
              - else
                %p.url= @response_set.documentation_url
                - if @response_set.kitten_data && @response_set.kitten_data.data
                  .alert.alert-success
                    = t('surveyor.documentation_url.autocompleted')
                - else
                  .alert.alert-info
                    = t('surveyor.documentation_url.not_autocompleted')

            .span4
              %a.btn.btn-large.btn-primary{href: 'start'}= t('surveys.edit_button')

    = render :partial => '/partials/section', :collection => @sections, :locals => {:f => f}

    .container
      .row
        .span9
        = render partial: 'surveyor/save_button'

- content_for(:foot_scripts) do
  :javascript
    $(document).ready(function() {
      $("input#surveyor_javascript_enabled").val(true);
      Tracking.event('Questionnaire', 'continue', #{@response_set.access_code.to_json})
    });
