-# we need to break from the .container and
-# also surround everything in a form

- content_for(:header) do
  / header overridden
- content_for(:main_container_class) {'non-container'}

/ has it's own form, so need it up here
-@surveys = Survey.available_to_complete
=render :partial => 'shared/switch_jurisdiction', locals: {response_set: @response_set}
=render :partial => 'shared/switch_language', locals: {response_set: @response_set}

- scope_locale @response_set.locale do
  = semantic_form_for(@response_set, :as => :r, :url => surveyor.update_my_survey_path, :html => {:method => :put, :id => "survey_form"}) do |f|

    .affixed
      %header
        .container
          .row
            .span9
              .jurisdiction
                Jurisdiction:
                .badge.badge-inverse=  @response_set.jurisdiction
                %span.status= @survey.try(:status)
                = link_to "#switch-#{@response_set.id}", data: {toggle: :modal, content: t('dashboard.popover.change_jurisdiction') }, class: 'popdown' do
                  %i.icon.icon-pencil
                - if @survey.translations.count > 1
                  Language:
                  .badge.badge-inverse= @response_set.locale_name
                  = link_to "#switch-language-#{@response_set.id}", data:{toggle: :modal} do
                    %i.icon.icon-pencil

              %h1{'data-bind-to-input' => @survey.meta_map[:dataset_title]}= @response_set.title
            .span3.save-button
              - if user_signed_in?
                %button.btn.btn-primary.btn-large.pull-right{type: :submit, name: :finish, "data-btn-loading" => t('surveyor.saving_questionnaire')}
                  %i.icon-loading.icon-spin.icon-refresh.icon-large
                  %span= t('surveyor.click_here_to_finish')
              - else
                =link_to t('surveyor.click_here_to_finish'), '#save-and-finish-modal', :class => 'btn btn-primary btn-large pull-right', :role=>"button", 'data-toggle' => "modal"

    = render :partial => 'status_panel'
    = render :partial => 'shared/flashes'

    - data = {'response-id' => @response_set.id}
    - data['url-verified']              = t('surveyor.url_verified')
    - data['autocompleted']             = t('surveyor.autocompleted')
    - data['autocompleted-changed']     = t('surveyor.autocompleted_changed')
    - data['autocompleted-explained']   = t('surveyor.autocompleted_explained')
    - data['url-warning']               = t('surveyor.url_warning')
    - data['autocompleted-url-warning'] = t('surveyor.autocompleted_url_warning')
    - data['url-explained']             = t('surveyor.url_explained')
    - data['metadata-missing']          = t('surveyor.metadata_missing')

    - data['url-explanation']           = t('surveyor.url_explanation')
    - data['autocomplete-explanation']  = t('surveyor.autocomplete_explanation')

    #surveyor{class: params[:highlight_mandatory] ? 'highlight_mandatory' : '', data: data}
      = hidden_field_tag :surveyor_javascript_enabled, false
      - if @update
        = hidden_field_tag :update, true

      .container.survey-intro
        .well
          .row-fluid
            .span8.lead
              = @survey.translation(I18n.locale)[:description].try(:html_safe)
              %p
                %a{href: about_url} Read more about Open Data Certificates


          .documentation-url
            %label Where is your data described?
            .row-fluid
              .span8
                - if @response_set.documentation_url.blank?
                  %p.url.placeholder No documentation URL
                  .alert.alert-error
                    = t('surveyor.documentation_url.missing')
                - else
                  %p.url= @response_set.documentation_url
                  - if @response_set.kitten_data && @response_set.kitten_data.data
                    .alert.alert-success
                      = t('surveyor.documentation_url.autocompleted')
                  - else
                    .alert.alert-info
                      = t('surveyor.documentation_url.not_autocompleted')

              .span4
                %a.btn.btn-large.btn-primary{href: 'start'} Edit


      = render 'partials/dependents' unless @dependents.empty?

      -# If there were no responses by the user, the cache the blank survey for
      -# other new users
      - cache_key = @responses.empty? ? "blank_survey_#{@response_set.survey_id}_#{@response_set.locale}" : @response_set
      = cache(cache_key) do
        = render :partial => '/partials/section', :collection => @sections, :locals => {:f => f}

= render :partial => 'surveyor/save_and_finish_modal' unless user_signed_in?

:javascript
  $(document).ready(function() {
    $("input#surveyor_javascript_enabled").val(true);
  });
