-# we need to break from the .container and
-# also surround everything in a form

- content_for(:header) do
  / header overridden
- content_for(:main_container_class) {'non-container'}


/ has it's own form, so need it up here
-@surveys = Survey.available_to_complete
=render :partial => 'shared/switch_jurisdiction', locals: {response_set: @response_set}

= semantic_form_for(@response_set, :as => :r, :url => surveyor.update_my_survey_path, :html => {:method => :put, :id => "survey_form"}) do |f|

  .affixed
    %header
      .container
        .row
          .span9
            .jurisdiction
              .badge.badge-inverse=  @response_set.jurisdiction
              = link_to 'Change Jurisdiction', "#switch-#{@response_set.id}", data: {toggle: :modal, content: t('dashboard.popover.change_jurisdiction') }, class: 'popdown'
            %h1{'data-bind-to-input' => @survey.dataset_title}= @response_set.title
          .span3
            - if user_signed_in?
              = f.submit t('surveyor.click_here_to_finish'), :name => :finish, :class => 'btn btn-primary btn-large'
            - else
              =link_to t('surveyor.click_here_to_finish'), '#save-and-finish-modal', :class => 'btn btn-primary btn-large', :role=>"button", 'data-toggle' => "modal"


  = render :partial => 'status_panel'
  = render :partial => 'shared/flashes'

  #surveyor{class: params[:highlight_mandatory] ? 'highlight-mandatory' : ''}
    = hidden_field_tag :surveyor_javascript_enabled, false

    .container
      .row
        .lead.span8= @survey.translation(I18n.locale)[:description].try(:html_safe)

    = render 'partials/dependents' unless @dependents.empty?

    -# If there were no responses by the user, the cache the blank survey for
    -# other new users
    - if @response_set.responses.empty?
      = cache("blank_survey_#{@response_set.survey_id}") do
        = render :partial => '/partials/section', :collection => @sections, :as => :section, :locals => {:f => f}
    - else # no cache
      = render :partial => '/partials/section', :collection => @sections, :as => :section, :locals => {:f => f}

:javascript
  $(document).ready(function() {
    $('fieldset.question-row').each(function(){
      var $question = $(this),
          $label = $question.find('label.question_label'),
          $requirements = $question.closest('li.container').find('fieldset.q_label'),
          text = '';
      if ($question.is('.mandatory') || $requirements.is('.requirement_basic')) {
        text = '#{t('requirement_label.requirement')}';
      } else if ($requirements.is('.requirement_pilot')) {
        text = '#{t('requirement_label.requirement_pilot')}';
      } else if ($requirements.is('.requirement_standard')) {
        text = '#{t('requirement_label.requirement_standard')}';
      } else if ($requirements.is('.requirement_exemplar')) {
        text = '#{t('requirement_label.requirement_exemplar')}';
      }
      if (text !== '') {
        $label.append(' <small>' + text + '</small>');
      }
    });
  });

= render :partial => 'surveyor/save_and_finish_modal' unless user_signed_in?


:javascript
  $(document).ready(function() {
    $("input#surveyor_javascript_enabled").val(true);
  });
